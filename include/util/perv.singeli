# Pervasion

def extend perv1{op} = {
  def op{{...a}} = each{op, a}
}

def extend perv2{op} = {
  def op{    a , {...b}} = each{op{a,.}, b}
  def op{{...a},     b } = each{op{.,b}, a}
  def op{{...a}, {...b}} = each{op, a, b}
}

local def anytup = match {
  {{..._}, ..._} => 1; {_, ...r} => anytup{...r}; {} => 0
}

def perv{n if is{'number',kind{n}}} = { def extend _{op} = {
  def op{...t if is{n,length{t}} and anytup{...t}} = {
    def ftup = match { {{{...e}, ..._}} => e; {_, ...r} => ftup{r} }
    def l = ftup{t}
    def r = match { {{...s}} => s; {k} => each{{_}=>k,l} }
    each{op, ...each{r,t}}
  }
}}
def perv{1} = perv1
def perv{2} = perv2
